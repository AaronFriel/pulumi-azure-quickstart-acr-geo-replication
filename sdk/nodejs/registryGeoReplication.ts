// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

import * as pulumiAzureNative from "@pulumi/azure-native";

export class RegistryGeoReplication extends pulumi.ComponentResource {
    /** @internal */
    public static readonly __pulumiType = 'registrygeoreplication:index:RegistryGeoReplication';

    /**
     * Returns true if the given object is an instance of RegistryGeoReplication.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RegistryGeoReplication {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RegistryGeoReplication.__pulumiType;
    }

    /**
     * The login server url
     */
    public /*out*/ readonly loginServerOut!: pulumi.Output<string>;
    /**
     * The Registry
     */
    public /*out*/ readonly registry!: pulumi.Output<pulumiAzureNative.containerregistry.Registry>;
    /**
     * The replication policy
     */
    public /*out*/ readonly replication!: pulumi.Output<pulumiAzureNative.containerregistry.Replication>;

    /**
     * Create a RegistryGeoReplication resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RegistryGeoReplicationArgs, opts?: pulumi.ComponentResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if ((!args || args.name === undefined) && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            if ((!args || args.replicationLocation === undefined) && !opts.urn) {
                throw new Error("Missing required property 'replicationLocation'");
            }
            inputs["adminUserEnabled"] = args ? args.adminUserEnabled : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["replicationLocation"] = args ? args.replicationLocation : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["sku"] = args ? args.sku : undefined;
            inputs["loginServerOut"] = undefined /*out*/;
            inputs["registry"] = undefined /*out*/;
            inputs["replication"] = undefined /*out*/;
        } else {
            inputs["loginServerOut"] = undefined /*out*/;
            inputs["registry"] = undefined /*out*/;
            inputs["replication"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(RegistryGeoReplication.__pulumiType, name, inputs, opts, true /*remote*/);
    }
}

/**
 * The set of arguments for constructing a RegistryGeoReplication resource.
 */
export interface RegistryGeoReplicationArgs {
    /**
     * Enable admin user that has push / pull permissions to the registry
     */
    adminUserEnabled?: pulumi.Input<boolean>;
    /**
     * The location of the registry
     */
    location: pulumi.Input<string>;
    /**
     * Globally unique name of your azure container registry
     */
    name: pulumi.Input<string>;
    /**
     * The location of the registry replica location
     */
    replicationLocation: pulumi.Input<string>;
    /**
     * The name of the enclosing resource group
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * Tier of your Azure Container Registry. Geo-replication requires the Premium SKU
     */
    sku?: pulumi.Input<string>;
}
